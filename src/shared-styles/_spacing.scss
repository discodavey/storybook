@use "logical";
@use "validation";

@mixin margin($sizes, $dimension: "") {
  @include _spacing($sizes, margin, $dimension);
}

@mixin padding($sizes, $dimension: "") {
  @include _spacing($sizes, padding, $dimension);
}

@mixin block-spacing($start: 0, $end: 3) {
  @include margin($start $end, block);
}


@mixin _spacing($sizes, $space-type, $dimension: "") {

  @if $dimension == "" {

    @include validation.expect_at_most($sizes, 4, "More than four sizes supplied when no dimension") {
      @include logical.property($space-type, all, $sizes);
    }

  } @else if $dimension == inline {

    @include validation.expect_at_most($sizes, 2, "More than two sizes supplied with 'inline' dimension") {
      @include logical.property($space-type, $dimension, $sizes);
    }

  } @else if $dimension == inline-start {

    @include validation.expect_single_value($sizes, "More than one size supplied with 'inline-start' dimension") {
      @include logical.property($space-type, $dimension, $sizes);
    }

  } @else if $dimension == inline-end {

    @include validation.expect_single_value($sizes, "More than one size supplied with 'inline-end' dimension") {
      @include logical.property($space-type, $dimension, $sizes);
    }

  } @else if $dimension == block {

    @include validation.expect_at_most($sizes, 2, "More than two sizes supplied with 'block' dimension") {
      @include logical.property($space-type, $dimension, $sizes);
    }

  } @else if $dimension == block-start {

    @include validation.expect_single_value($sizes, "More than one size supplied with 'block-start' dimension") {
      @include logical.property($space-type, $dimension, $sizes);
    }

  } @else if $dimension == block-end {

    @include validation.expect_single_value($sizes, "More than one size supplied with 'block-end' dimension") {
      @include logical.property($space-type, $dimension, $sizes);
    }

  } @else if index((top, bottom, left, right), $dimension) {
    @include _error("'#{$dimension}' is a physical dimension, use its logical equivilant");
  } @else {
    @include _error("Unknown dimension '#{$dimension}'");
  }

}